const BuildOfferV2 = {"body":{"title":"BuildOfferInput","type":"object","properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"quantity":{"title":"Quantity","description":"The number of offers to place.","default":1,"type":"integer"},"criteria":{"title":"Criteria","description":"Criteria for the collection or trait offer","type":"object","required":["collection","contract"],"properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address. Must be one of ['0x0000000000000068f116a894984e2db1123eb395']","type":"string"},"offer_protection_enabled":{"title":"Offer Protection Enabled","description":"Builds the offer on OpenSea's signed zone to provide offer protections from receiving an item which is disabled from trading.","default":true,"type":"boolean"}},"required":["offerer","criteria","protocol_address"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"title":"BuildOffer","type":"object","properties":{"partialParameters":{"title":"Partialparameters","description":"Partial set of Seaport Order Parameters","type":"object","required":["consideration","zone","zoneHash"],"properties":{"consideration":{"title":"Consideration","description":"One of the consideration items used when creating criteria offers.","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}},"required":["partialParameters"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ConnectEmbeddedWallet = {"metadata":{"allOf":[{"type":"object","properties":{"privy_access_token":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The access token of the user."},"privy_app_id":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Privy app id to authenticate the user against."}},"required":["privy_access_token","privy_app_id"]}]},"response":{"200":{"title":"EmbeddedWalletModel","type":"object","properties":{"address":{"title":"Address","description":"The address of the embedded wallet user","type":"string"}},"required":["address"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GenerateListingFulfillmentDataV2 = {"body":{"title":"GenerateListingFulfillmentInput","type":"object","properties":{"listing":{"title":"Listing","description":"Listing to get fulfillment data for.","type":"object","required":["hash","chain"],"properties":{"hash":{"title":"Hash","description":"Hash of the order to fulfill.","type":"string"},"chain":{"title":"Chain","type":"string"},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address. Must be one of ['0x00000000000000adc04c56bf30ac9d3c0aaf14dc', '0x0000000000000068f116a894984e2db1123eb395']","type":"string"}}},"fulfiller":{"title":"Fulfiller","description":"Fulfiller address.","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}}},"required":["listing","fulfiller"],"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"title":"FulfillmentOutput","type":"object","properties":{"protocol":{"title":"Protocol","description":"Exchange contract address. Must be one of ['0x00000000000000adc04c56bf30ac9d3c0aaf14dc', '0x0000000000000068f116a894984e2db1123eb395']","type":"string"},"fulfillment_data":{"title":"Fulfillment Data","description":"All the information, including signatures, needed to fulfill an order directly onchain.","type":"object","required":["transaction","orders"],"properties":{"transaction":{"title":"Transaction","description":"The name of the fulfillment method and associated call data.","type":"object","required":["function","chain","to","value","input_data"],"properties":{"function":{"title":"Function","description":"Seaport protocol contract method to use to fulfill the order.","type":"string"},"chain":{"title":"Chain","description":"Numeric Chain Identifier.","type":"integer"},"to":{"title":"To","description":"Protocol contract address to use fto fulfill the order.","type":"string"},"value":{"title":"Value","description":"Wei value of the transaction.","type":"integer"},"input_data":{"title":"Input Data","description":"Decoded Call Data.","type":"object","additionalProperties":true}}},"orders":{"title":"Order","description":"Array of Seaport Orders.","type":"array","items":{"title":"SerializedOrder","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}}}}}},"required":["protocol","fulfillment_data"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GenerateOfferFulfillmentDataV2 = {"body":{"title":"GenerateOfferFulfillmentInput","type":"object","properties":{"offer":{"title":"Offer","description":"Offer to get fulfillment data for.","type":"object","required":["hash","chain"],"properties":{"hash":{"title":"Hash","description":"Hash of the order to fulfill.","type":"string"},"chain":{"title":"Chain","type":"string"},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address. Must be one of ['0x00000000000000adc04c56bf30ac9d3c0aaf14dc', '0x0000000000000068f116a894984e2db1123eb395']","type":"string"}}},"fulfiller":{"title":"Fulfiller","description":"Fulfiller address.","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"consideration":{"title":"Consideration","description":"If the offer you are fulfilling is a criteria offer, the NFT you are using to fulfill the offer with. The fulfiller account must own this NFT or the request will not succeed.","type":"object","required":["asset_contract_address","token_id"],"properties":{"asset_contract_address":{"title":"Asset Contract Address","type":"string"},"token_id":{"title":"Token Id","description":"NFT Token ID which will be used to fulfill the offer.","type":"string"}}}},"required":["offer","fulfiller"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"title":"FulfillmentOutput","type":"object","properties":{"protocol":{"title":"Protocol","description":"Exchange contract address. Must be one of ['0x00000000000000adc04c56bf30ac9d3c0aaf14dc', '0x0000000000000068f116a894984e2db1123eb395']","type":"string"},"fulfillment_data":{"title":"Fulfillment Data","description":"All the information, including signatures, needed to fulfill an order directly onchain.","type":"object","required":["transaction","orders"],"properties":{"transaction":{"title":"Transaction","description":"The name of the fulfillment method and associated call data.","type":"object","required":["function","chain","to","value","input_data"],"properties":{"function":{"title":"Function","description":"Seaport protocol contract method to use to fulfill the order.","type":"string"},"chain":{"title":"Chain","description":"Numeric Chain Identifier.","type":"integer"},"to":{"title":"To","description":"Protocol contract address to use fto fulfill the order.","type":"string"},"value":{"title":"Value","description":"Wei value of the transaction.","type":"integer"},"input_data":{"title":"Input Data","description":"Decoded Call Data.","type":"object","additionalProperties":true}}},"orders":{"title":"Order","description":"Array of Seaport Orders.","type":"array","items":{"title":"SerializedOrder","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}}}}}},"required":["protocol","fulfillment_data"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetAccount = {"metadata":{"allOf":[{"type":"object","properties":{"address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The public blockchain address."}},"required":["address"]}]},"response":{"200":{"title":"DetailedAccountDataModel","type":"object","properties":{"address":{"title":"Address","description":"The public blockchain address of the account.","type":"string"},"username":{"title":"Username","description":"The OpenSea account's username.","type":"string"},"profile_image_url":{"title":"Profile Image Url","description":"The OpenSea account's image url.","type":"string"},"banner_image_url":{"title":"Banner Image Url","description":"The OpenSea account's banner url.","type":"string"},"website":{"title":"Website","description":"Personal website for the OpenSea user.","type":"string"},"social_media_accounts":{"title":"Social Media Account","default":[],"type":"array","items":{"title":"SocialMediaAccountModel","type":"object","properties":{"platform":{"title":"Platform","description":"The social media platform, e.g. twitter or instagram","type":"string"},"username":{"title":"Username","description":"The username for the social media platform","type":"string"}},"required":["platform","username"]}},"bio":{"title":"Bio","description":"The OpenSea account's bio.","type":"string"},"joined_date":{"title":"Joined Date","description":"Date the account was first added to OpenSea.","type":"string","format":"date"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetAllListingsOnCollectionV2 = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."}},"required":["collection_slug"]},{"type":"object","properties":{"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of listings to return. Must be between 1 and 100. Default: 100"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"Paginated Listing List","type":"object","properties":{"listings":{"title":"Listings","description":"OpenSea Listings","type":"array","items":{"title":"Listing","type":"object","properties":{"order_hash":{"title":"Order Hash","description":"Order hash","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"type":{"title":"OrderType","description":"basic - Quantities are fixed. Used for fixed price listings and offers.\nenglish - The quantity represents the minimum price.\ncriteria - The items that are accepted by this offer will be found in the criteria fields.\n\n`basic` `dutch` `english` `criteria`","enum":["basic","dutch","english","criteria"],"properties":{},"type":"object"},"price":{"title":"BasicListingPrice","type":"object","properties":{"current":{"title":"Price","type":"object","required":["currency","decimals","value"],"properties":{"currency":{"title":"Currency","type":"string"},"decimals":{"title":"Decimals","type":"integer"},"value":{"title":"Value","type":"string"}}}},"required":["current"]},"protocol_data":{"title":"Protocol Data","description":"The onchain order data.","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address","type":"string"}},"required":["order_hash","chain","type","price","protocol_data","protocol_address"]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["listings","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetAllOffersOnCollectionV2 = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."}},"required":["collection_slug"]},{"type":"object","properties":{"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of offers to return. Must be between 1 and 100. Default: 100"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"Paginated Offer List","type":"object","properties":{"offers":{"title":"Offers","type":"array","items":{"title":"Offer","type":"object","properties":{"order_hash":{"title":"Order Hash","description":"Order hash","type":"string"},"chain":{"title":"ChainIdentifier","description":"OpenSea supported chains.\n\n`ethereum` `matic` `klaytn` `bsc` `solana` `arbitrum` `arbitrum_nova` `avalanche` `optimism` `base` `blast` `zora` `sepolia` `rinkeby` `mumbai` `amoy` `baobab` `bsctestnet` `goerli` `soldev` `arbitrum_goerli` `arbitrum_sepolia` `avalanche_fuji` `optimism_goerli` `optimism_sepolia` `base_goerli` `base_sepolia` `blast_sepolia` `gunzilla_testnet` `sei_devnet` `zora_testnet` `zora_sepolia`","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"],"properties":{},"type":"object"},"price":{"title":"PriceModel","type":"object","properties":{"currency":{"title":"Currency","type":"string"},"decimals":{"title":"Decimals","type":"integer"},"value":{"title":"Value","type":"string"}},"required":["currency","decimals","value"]},"criteria":{"title":"Criteria","description":"Criteria for collection or trait offers","type":"object","required":["collection","contract"],"properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}}},"protocol_data":{"title":"Protocol Data","description":"The onchain order data.","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address","type":"string"}},"required":["order_hash","chain","price","criteria","protocol_data","protocol_address"]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["offers","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetBestListingOnNftV2 = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."},"identifier":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The NFT token id."}},"required":["collection_slug","identifier"]}]},"response":{"200":{"title":"Listing","type":"object","properties":{"order_hash":{"title":"Order Hash","description":"Order hash","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"type":{"title":"OrderType","description":"basic - Quantities are fixed. Used for fixed price listings and offers.\nenglish - The quantity represents the minimum price.\ncriteria - The items that are accepted by this offer will be found in the criteria fields.\n\n`basic` `dutch` `english` `criteria`","enum":["basic","dutch","english","criteria"],"properties":{},"type":"object"},"price":{"title":"BasicListingPrice","type":"object","properties":{"current":{"title":"Price","type":"object","required":["currency","decimals","value"],"properties":{"currency":{"title":"Currency","type":"string"},"decimals":{"title":"Decimals","type":"integer"},"value":{"title":"Value","type":"string"}}}},"required":["current"]},"protocol_data":{"title":"Protocol Data","description":"The onchain order data.","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address","type":"string"}},"required":["order_hash","chain","type","price","protocol_data","protocol_address"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetBestListingsOnCollectionV2 = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."}},"required":["collection_slug"]},{"type":"object","properties":{"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of listings to return. Must be between 1 and 100. Default: 100"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"Paginated Listing List","type":"object","properties":{"listings":{"title":"Listings","description":"OpenSea Listings","type":"array","items":{"title":"Listing","type":"object","properties":{"order_hash":{"title":"Order Hash","description":"Order hash","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"type":{"title":"OrderType","description":"basic - Quantities are fixed. Used for fixed price listings and offers.\nenglish - The quantity represents the minimum price.\ncriteria - The items that are accepted by this offer will be found in the criteria fields.\n\n`basic` `dutch` `english` `criteria`","enum":["basic","dutch","english","criteria"],"properties":{},"type":"object"},"price":{"title":"BasicListingPrice","type":"object","properties":{"current":{"title":"Price","type":"object","required":["currency","decimals","value"],"properties":{"currency":{"title":"Currency","type":"string"},"decimals":{"title":"Decimals","type":"integer"},"value":{"title":"Value","type":"string"}}}},"required":["current"]},"protocol_data":{"title":"Protocol Data","description":"The onchain order data.","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address","type":"string"}},"required":["order_hash","chain","type","price","protocol_data","protocol_address"]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["listings","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetBestOfferOnNftV2 = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."},"identifier":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The NFT token id."}},"required":["collection_slug","identifier"]}]},"response":{"200":{"title":"Paginated Offer List","type":"object","properties":{"offers":{"title":"Offers","type":"array","items":{"title":"Offer","type":"object","properties":{"order_hash":{"title":"Order Hash","description":"Order hash","type":"string"},"chain":{"title":"ChainIdentifier","description":"OpenSea supported chains.\n\n`ethereum` `matic` `klaytn` `bsc` `solana` `arbitrum` `arbitrum_nova` `avalanche` `optimism` `base` `blast` `zora` `sepolia` `rinkeby` `mumbai` `amoy` `baobab` `bsctestnet` `goerli` `soldev` `arbitrum_goerli` `arbitrum_sepolia` `avalanche_fuji` `optimism_goerli` `optimism_sepolia` `base_goerli` `base_sepolia` `blast_sepolia` `gunzilla_testnet` `sei_devnet` `zora_testnet` `zora_sepolia`","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"],"properties":{},"type":"object"},"price":{"title":"PriceModel","type":"object","properties":{"currency":{"title":"Currency","type":"string"},"decimals":{"title":"Decimals","type":"integer"},"value":{"title":"Value","type":"string"}},"required":["currency","decimals","value"]},"criteria":{"title":"Criteria","description":"Criteria for collection or trait offers","type":"object","required":["collection","contract"],"properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}}},"protocol_data":{"title":"Protocol Data","description":"The onchain order data.","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address","type":"string"}},"required":["order_hash","chain","price","criteria","protocol_data","protocol_address"]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["offers","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCollection = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."}},"required":["collection_slug"]}]},"response":{"200":{"title":"DetailedCollectionModel","type":"object","properties":{"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"name":{"title":"Name","description":"Name of the collection","type":"string"},"description":{"title":"Description","description":"Description of the collection","type":"string"},"image_url":{"title":"Image Url","description":"Square image used to represent the collection","type":"string"},"banner_image_url":{"title":"Banner Image Url","description":"Banner image used to represent the collection","type":"string"},"owner":{"title":"Owner","description":"The public blockchain address of the owner.","type":"string"},"safelist_status":{"title":"SafelistRequestStatus","description":"Status of the collection verification requests.\n\n`not_requested` `requested` `approved` `verified` `disabled_top_trending`","enum":["not_requested","requested","approved","verified","disabled_top_trending"],"properties":{},"type":"object"},"category":{"title":"Category","description":"Category of the collection (e.g. PFPs, Memberships, Art)","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the collection is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the collection is currently classified as 'Not Safe for Work' as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"},"trait_offers_enabled":{"title":"Trait Offers Enabled","description":"If trait offers are currently being accepted for the collection","type":"boolean"},"collection_offers_enabled":{"title":"Collection Offers Enabled","description":"If collection offers are currently being accepted for the collection","type":"boolean"},"opensea_url":{"title":"Opensea Url","description":"OpenSea Link to collection","type":"string"},"project_url":{"title":"Project Url","description":"External URL for the collection's website","type":"string"},"wiki_url":{"title":"Wiki Url","description":"External URL for the collection's wiki","type":"string"},"discord_url":{"title":"Discord Url","description":"External URL for the collection's Discord server","type":"string"},"telegram_url":{"title":"Telegram Url","description":"External URL for the collection's Telegram group","type":"string"},"twitter_username":{"title":"Twitter Username","description":"Username for the collection's Twitter account","type":"string"},"instagram_username":{"title":"Instagram Username","description":"Username for the collection's Instagram account","type":"string"},"contracts":{"title":"Contracts","description":"Contracts for the collection","type":"array","items":{"title":"CollectionContractModel","description":"Define the Contract's Addresses and Chain","type":"object","properties":{"address":{"title":"Address","description":"The public blockchain address of the contract.","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]}},"required":["address","chain"]}},"editors":{"title":"Editors","description":"List of editor addresses for the collection","type":"array","items":{"type":"string"}},"fees":{"title":"Fees","description":"List of fees for the collection including creator earnings and OpenSea fees","type":"array","items":{"title":"CollectionFeeModel","type":"object","properties":{"fee":{"title":"Fee","description":"Percentage of the sale price that is paid to the recipient","type":"number"},"recipient":{"title":"Recipient","description":"The public blockchain address of the recipient","type":"string"},"required":{"title":"Required","description":"If the fee is required for the collection","default":false,"type":"boolean"}},"required":["fee","recipient"]}},"required_zone":{"title":"Required Zone","description":"If defined, the required zone for all orders for this collection","type":"string"},"rarity":{"title":"Rarity","description":"Rarity data for the Collection","type":"object","required":["strategy_id","strategy_version","max_rank","total_supply"],"properties":{"strategy_id":{"title":"RarityStrategyId","description":"Rarity algorithm used. Currently, always 'openrarity'","enum":["openrarity"]},"strategy_version":{"title":"Strategy Version","description":"Version of the rarity algorithm used","type":"string"},"calculated_at":{"title":"Calculated At","default":"Isoformat datetime when the rarity was calculated","type":"string"},"max_rank":{"title":"Max Rank","description":"Maximum possible rank for the collection","type":"integer"},"total_supply":{"title":"Total Supply","description":"Total number of tokens scored in the collection","type":"integer"}}},"payment_tokens":{"title":"Payment Tokens","description":"Payment tokens for the collection","type":"array","items":{"title":"PaymentTokenModel","type":"object","properties":{"symbol":{"title":"Symbol","description":"The symbol of the payment token","type":"string"},"address":{"title":"Address","description":"The public blockchain address of the contract","type":"string"},"chain":{"title":"Chain","description":"The chain on which the contract exists","type":"string"},"image":{"title":"Image","description":"The image of the payment token","type":"string"},"name":{"title":"Name","description":"The name of the contract","type":"string"},"decimals":{"title":"Decimals","description":"The number of decimals of the contract","type":"integer"},"eth_price":{"title":"Eth Price","description":"The price of the payment token in ETH","type":"string"},"usd_price":{"title":"Usd Price","description":"The price of the payment token in USD","type":"string"}},"required":["symbol","address","chain","image","name","decimals","eth_price","usd_price"]}},"total_supply":{"title":"Total Supply","default":"The total supply of the collection (minted minus burned)","type":"integer"},"created_date":{"title":"Created Date","description":"The date the collection was created","type":"string","format":"date"}},"required":["collection","name","owner","safelist_status","category","is_disabled","is_nsfw","trait_offers_enabled","collection_offers_enabled","opensea_url","contracts","editors","fees","created_date"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCollectionOffersV2 = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."}},"required":["collection_slug"]}]},"response":{"200":{"title":"Offer List","type":"object","properties":{"offers":{"title":"Offers","type":"array","items":{"title":"Offer","type":"object","properties":{"order_hash":{"title":"Order Hash","description":"Order hash","type":"string"},"chain":{"title":"ChainIdentifier","description":"OpenSea supported chains.\n\n`ethereum` `matic` `klaytn` `bsc` `solana` `arbitrum` `arbitrum_nova` `avalanche` `optimism` `base` `blast` `zora` `sepolia` `rinkeby` `mumbai` `amoy` `baobab` `bsctestnet` `goerli` `soldev` `arbitrum_goerli` `arbitrum_sepolia` `avalanche_fuji` `optimism_goerli` `optimism_sepolia` `base_goerli` `base_sepolia` `blast_sepolia` `gunzilla_testnet` `sei_devnet` `zora_testnet` `zora_sepolia`","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"],"properties":{},"type":"object"},"price":{"title":"PriceModel","type":"object","properties":{"currency":{"title":"Currency","type":"string"},"decimals":{"title":"Decimals","type":"integer"},"value":{"title":"Value","type":"string"}},"required":["currency","decimals","value"]},"criteria":{"title":"Criteria","description":"Criteria for collection or trait offers","type":"object","required":["collection","contract"],"properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}}},"protocol_data":{"title":"Protocol Data","description":"The onchain order data.","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address","type":"string"}},"required":["order_hash","chain","price","criteria","protocol_data","protocol_address"]}}},"required":["offers"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCollectionStats = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."}},"required":["collection_slug"]}]},"response":{"200":{"title":"GetCollectionStatsResponse","type":"object","properties":{"total":{"title":"Total","description":"The aggregate stats over the collection's lifetime","type":"object","required":["volume","sales","average_price","num_owners","market_cap","floor_price","floor_price_symbol"],"properties":{"volume":{"title":"Volume","description":"The all time volume of sales for the collection","type":"number"},"sales":{"title":"Sales","description":"The all time number of sales for the collection","type":"integer"},"average_price":{"title":"Average Price","description":"The all time average sale price of NFTs in the collection","type":"number"},"num_owners":{"title":"Num Owners","description":"The current number of unique owners of NFTs in the collection","type":"integer"},"market_cap":{"title":"Market Cap","description":"The current market cap of the collection","type":"number"},"floor_price":{"title":"Floor Price","description":"The current lowest price of NFTs in the collection","type":"number"},"floor_price_symbol":{"title":"Floor Price Symbol","description":"The symbol of the payment asset for the floor price","type":"string"}}},"intervals":{"title":"Interval Stats","description":"The stats for each interval","type":"array","items":{"title":"CollectionStatsIntervalModel","type":"object","properties":{"interval":{"title":"CollectionStatsInterval","description":"The interval for which the stats are calculated\n\n`one_day` `seven_day` `thirty_day`","enum":["one_day","seven_day","thirty_day"],"type":"string","properties":{}},"volume":{"title":"Volume","description":"The volume of sales for the collection during the specified interval","type":"number"},"volume_diff":{"title":"Volume Diff","description":"The volume differential compared to the previous interval","type":"number"},"volume_change":{"title":"Volume Change","description":"The percentage change in volume compared to the previous interval","type":"number"},"sales":{"title":"Sales","description":"The number of sales for the collection during the specified interval","type":"integer"},"sales_diff":{"title":"Sales Diff","description":"The percentage change in number of sales compared to the previous interval","type":"number"},"average_price":{"title":"Average Price","description":"The average sale price of NFTs in the collection during the interval","type":"number"}},"required":["interval","volume","volume_diff","volume_change","sales","sales_diff","average_price"]}}},"required":["total","intervals"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetContract = {"metadata":{"allOf":[{"type":"object","properties":{"address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The public blockchain address."},"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."}},"required":["address","chain"]}]},"response":{"200":{"title":"ContractModel","type":"object","properties":{"address":{"title":"Address","description":"The public blockchain address of the contract","type":"string"},"chain":{"title":"Chain","description":"The chain on which the contract exists","type":"string"},"collection":{"title":"Collection","description":"A unique string (collection slug) to identify a collection on OpenSea","type":"string"},"contract_standard":{"title":"Contract Standard","description":"The standard of the contract (e.g., ERC721, ERC1155)","type":"string"},"name":{"title":"Name","description":"The name of the contract","type":"string"},"total_supply":{"title":"Total Supply","description":"The total supply of the contract, only available if the contract has a getter for totalSupply()","type":"integer"}},"required":["address","chain","collection","contract_standard","name","total_supply"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetEmbeddedWallet = {"metadata":{"allOf":[{"type":"object","properties":{"user_id":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The id of the user."}},"required":["user_id"]}]},"response":{"200":{"title":"EmbeddedWalletModel","type":"object","properties":{"address":{"title":"Address","description":"The address of the embedded wallet user","type":"string"}},"required":["address"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetListings = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."},"protocol":{"type":"string","enum":["seaport"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The token settlement protocol to use in the request."}},"required":["chain","protocol"]},{"type":"object","properties":{"asset_contract_address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter results by the contract address for NFT(s).  \n NOTE: If used, token_ids or token_id is required."},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of orders to return. Must be between 1 and 50. Default: 20"},"listed_after":{"type":"string","format":"date-time","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include orders that were listed after the given timestamp. This is a Unix epoch timestamp in seconds."},"listed_before":{"type":"string","format":"date-time","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include orders that were listed before the given timestamp. This is a Unix epoch timestamp in seconds."},"maker":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter results by the order maker's wallet address."},"order_by":{"type":"string","enum":["created_date","eth_price"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The order in which to sort the results. Default: created_date \n NOTE: If `eth_price` is used, `asset_contract_address` and `token_id` are required."},"order_direction":{"type":"string","enum":["asc","desc"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The direction in which to sort the results. Default: desc"},"payment_token_address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Payment Token Address to filter results. This ensures all returned orders are listed in a single currency."},"taker":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter results by the order taker's wallet address."},"token_ids":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"An array of token IDs to search for (e.g. ?token_ids=1&token_ids=209). This endpoint will return a list of orders with token_id matching any of the IDs in this array. \n NOTE: If used, asset_contract_address is required."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"next":{"type":"string","description":"The cursor for the next page of results."},"previous":{"type":"string","description":"The cursor for the previous page of results."},"orders":{"type":"array","items":{"type":"object","description":"Models OrderV2 objects to serialize to a 'similar' schema to what we have with OrderV1s","properties":{"created_date":{"type":"string","format":"date-time","description":"Date the order was created"},"closing_date":{"type":"string","format":"date-time","description":"Date the order was closed"},"listing_time":{"type":"integer","readOnly":true,"description":"Timestamp representation of created_date"},"expiration_time":{"type":"integer","readOnly":true,"description":"Timestamp representation of closing_date"},"order_hash":{"type":"string","description":"An identifier for the order"},"protocol_data":{"readOnly":true,"title":"SerializedOrder","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"type":["string","null"],"readOnly":true,"description":"Exchange Contract Address. Typically the address of the Seaport contract."},"current_price":{"type":"string","description":"Current price of the order"},"maker":{"readOnly":true,"description":"The public blockchain address of the order maker.","type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"taker":{"readOnly":true,"description":"The public blockchain address of the order taker.","type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"maker_fees":{"type":"array","items":{"type":"object","properties":{"account":{"readOnly":true,"type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"basis_points":{"type":"string"}},"required":["account","basis_points"]},"readOnly":true},"taker_fees":{"type":"array","items":{"type":"object","properties":{"account":{"readOnly":true,"type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"basis_points":{"type":"string"}},"required":["account","basis_points"]},"readOnly":true},"side":{"type":"string","description":"The side of the order, either bid (offer) or ask(listing)."},"order_type":{"readOnly":true,"enum":["basic","dutch","english","criteria"],"type":"string","description":"* `basic` - basic\n* `dutch` - dutch\n* `english` - english\n* `criteria` - criteria\n\n`basic` `dutch` `english` `criteria`"},"cancelled":{"type":"boolean","description":"If true, the order maker has canceled the order which means it can no longer be filled."},"finalized":{"type":"boolean","description":"If true, the order has already been filled."},"marked_invalid":{"type":"boolean","readOnly":true,"description":"If true, the order is currently invalid and can not be filled."},"remaining_quantity":{"type":"integer","description":"The remaining quantity of the order that has not been filled. This is useful for erc1155 orders."},"relay_id":{"type":"string","readOnly":true,"description":"Deprecated Field"},"criteria_proof":{"type":["array","null"],"items":{"type":"string"},"readOnly":true,"description":"A merkle root composed of the valid set of token identifiers for the order"},"maker_asset_bundle":{"type":"object","additionalProperties":true,"description":"Deprecated Field.","readOnly":true},"taker_asset_bundle":{"type":"object","additionalProperties":true,"description":"Deprecated Field.","readOnly":true}},"required":["cancelled","closing_date","created_date","criteria_proof","current_price","expiration_time","finalized","listing_time","maker","maker_asset_bundle","maker_fees","marked_invalid","order_hash","order_type","protocol_address","protocol_data","relay_id","remaining_quantity","side","taker","taker_asset_bundle","taker_fees"]}}},"required":["next","orders","previous"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetNft = {"metadata":{"allOf":[{"type":"object","properties":{"address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The public blockchain address."},"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."},"identifier":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The NFT token id."}},"required":["address","chain","identifier"]}]},"response":{"200":{"title":"GetNftResponse","type":"object","properties":{"nft":{"title":"DetailedNftModel","type":"object","properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the NFT's original image. This may be an HTTP url, SVG data, or other directly embedded data.","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"},"animation_url":{"title":"Animation Url","description":"Link to the NFT's original animation.","type":"string"},"is_suspicious":{"title":"Is Suspicious","description":"If the item has been reported for suspicious activity by OpenSea","type":"boolean"},"creator":{"title":"Creator","description":"The public blockchain address of the creator","type":"string"},"traits":{"title":"Traits","description":"List of Trait objects. The field will be null if the NFT has more than 50 traits","type":"array","items":{"title":"TraitModel","type":"object","properties":{"trait_type":{"title":"Trait Type","description":"The name of the trait category (e.g. 'Background')","maxLength":150,"type":"string"},"display_type":{"title":"DisplayTypeField","description":"A field indicating how to display. None is used for string traits.\n\n`number` `boost_percentage` `boost_number` `author` `date` `None`","enum":["number","boost_percentage","boost_number","author","date","None"],"type":"string","properties":{}},"max_value":{"title":"Max Value","description":"Ceiling for possible numeric trait values","type":"string"},"value":{"title":"Value","description":"The value of the trait (e.g. 'Red')","anyOf":[{"type":"number"},{"type":"integer"},{"type":"string","format":"date"},{"type":"string"}]}},"required":["pk","trait_type","max_value","value"]}},"owners":{"title":"Owners","description":"List of Owners. The field will be null if the NFT has more than 50 owners","type":"array","items":{"title":"OwnerModel","type":"object","properties":{"address":{"title":"Address","description":"The public blockchain address of the owner","type":"string"},"quantity":{"title":"Quantity","description":"The number of tokens owned ","type":"integer"}},"required":["address","quantity"]}},"rarity":{"title":"Rarity","description":"Rarity data for the NFT","type":"object","required":["rank"],"properties":{"strategy_id":{"description":"Rarity algorithm used. Currently, always 'openrarity'","title":"RarityStrategyId","enum":["openrarity"]},"strategy_version":{"title":"Strategy Version","description":"Deprecated Field","type":"string"},"rank":{"title":"Rank","description":"Rarity Rank of the NFT in the collection","type":"integer"},"score":{"title":"Score","description":"Deprecated Field","type":"number"},"calculated_at":{"title":"Calculated At","description":"Deprecated Field","type":"string"},"max_rank":{"title":"Max Rank","description":"Deprecated Field","type":"integer"},"total_supply":{"title":"Total Supply","description":"Deprecated Field","default":0,"type":"integer"},"ranking_features":{"title":"Ranking Features","description":"Deprecated Field","type":"object","properties":{"unique_attribute_count":{"title":"Unique Attribute Count","description":"Deprecated Field.","default":0,"type":"integer"}}}}}},"required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw","is_suspicious","creator","traits","owners","rarity"]}},"required":["nft"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetOffers = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."},"protocol":{"type":"string","enum":["seaport"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The token settlement protocol to use in the request."}},"required":["chain","protocol"]},{"type":"object","properties":{"asset_contract_address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter results by the contract address for NFT(s).  \n NOTE: If used, token_ids or token_id is required."},"cursor":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of orders to return. Must be between 1 and 50. Default: 20"},"listed_after":{"type":"string","format":"date-time","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include orders that were listed after the given timestamp. This is a Unix epoch timestamp in seconds."},"listed_before":{"type":"string","format":"date-time","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include orders that were listed before the given timestamp. This is a Unix epoch timestamp in seconds."},"maker":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter results by the order maker's wallet address."},"order_by":{"type":"string","enum":["created_date","eth_price"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The order in which to sort the results. Default: created_date \n NOTE: If `eth_price` is used, `asset_contract_address` and `token_id` are required."},"order_direction":{"type":"string","enum":["asc","desc"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The direction in which to sort the results. Default: desc"},"payment_token_address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Payment Token Address to filter results. This ensures all returned orders are listed in a single currency."},"taker":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter results by the order taker's wallet address."},"token_ids":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"An array of token IDs to search for (e.g. ?token_ids=1&token_ids=209). This endpoint will return a list of orders with token_id matching any of the IDs in this array. \n NOTE: If used, asset_contract_address is required."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"next":{"type":"string","description":"The cursor for the next page of results."},"previous":{"type":"string","description":"The cursor for the previous page of results."},"orders":{"type":"array","items":{"type":"object","description":"Models OrderV2 objects to serialize to a 'similar' schema to what we have with OrderV1s","properties":{"created_date":{"type":"string","format":"date-time","description":"Date the order was created"},"closing_date":{"type":"string","format":"date-time","description":"Date the order was closed"},"listing_time":{"type":"integer","readOnly":true,"description":"Timestamp representation of created_date"},"expiration_time":{"type":"integer","readOnly":true,"description":"Timestamp representation of closing_date"},"order_hash":{"type":"string","description":"An identifier for the order"},"protocol_data":{"readOnly":true,"title":"SerializedOrder","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"type":["string","null"],"readOnly":true,"description":"Exchange Contract Address. Typically the address of the Seaport contract."},"current_price":{"type":"string","description":"Current price of the order"},"maker":{"readOnly":true,"description":"The public blockchain address of the order maker.","type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"taker":{"readOnly":true,"description":"The public blockchain address of the order taker.","type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"maker_fees":{"type":"array","items":{"type":"object","properties":{"account":{"readOnly":true,"type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"basis_points":{"type":"string"}},"required":["account","basis_points"]},"readOnly":true},"taker_fees":{"type":"array","items":{"type":"object","properties":{"account":{"readOnly":true,"type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"basis_points":{"type":"string"}},"required":["account","basis_points"]},"readOnly":true},"side":{"type":"string","description":"The side of the order, either bid (offer) or ask(listing)."},"order_type":{"readOnly":true,"enum":["basic","dutch","english","criteria"],"type":"string","description":"* `basic` - basic\n* `dutch` - dutch\n* `english` - english\n* `criteria` - criteria\n\n`basic` `dutch` `english` `criteria`"},"cancelled":{"type":"boolean","description":"If true, the order maker has canceled the order which means it can no longer be filled."},"finalized":{"type":"boolean","description":"If true, the order has already been filled."},"marked_invalid":{"type":"boolean","readOnly":true,"description":"If true, the order is currently invalid and can not be filled."},"remaining_quantity":{"type":"integer","description":"The remaining quantity of the order that has not been filled. This is useful for erc1155 orders."},"relay_id":{"type":"string","readOnly":true,"description":"Deprecated Field"},"criteria_proof":{"type":["array","null"],"items":{"type":"string"},"readOnly":true,"description":"A merkle root composed of the valid set of token identifiers for the order"},"maker_asset_bundle":{"type":"object","additionalProperties":true,"description":"Deprecated Field.","readOnly":true},"taker_asset_bundle":{"type":"object","additionalProperties":true,"description":"Deprecated Field.","readOnly":true}},"required":["cancelled","closing_date","created_date","criteria_proof","current_price","expiration_time","finalized","listing_time","maker","maker_asset_bundle","maker_fees","marked_invalid","order_hash","order_type","protocol_address","protocol_data","relay_id","remaining_quantity","side","taker","taker_asset_bundle","taker_fees"]}}},"required":["next","orders","previous"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetOrder = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."},"order_hash":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The hash of the order to retrieve."},"protocol_address":{"type":"string","enum":[["0x00000000000000adc04c56bf30ac9d3c0aaf14dc","0x0000000000000068f116a894984e2db1123eb395"]],"$schema":"http://json-schema.org/draft-04/schema#","description":"The contract address of the protocol to use in the request."}},"required":["chain","order_hash","protocol_address"]}]},"response":{"200":{"title":"GetOrderResult","type":"object","properties":{"order":{"title":"Order","anyOf":[{"title":"Listing","type":"object","properties":{"order_hash":{"title":"Order Hash","description":"Order hash","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"type":{"title":"OrderType","description":"basic - Quantities are fixed. Used for fixed price listings and offers.\nenglish - The quantity represents the minimum price.\ncriteria - The items that are accepted by this offer will be found in the criteria fields.\n\n`basic` `dutch` `english` `criteria`","enum":["basic","dutch","english","criteria"],"properties":{},"type":"object"},"price":{"title":"BasicListingPrice","type":"object","properties":{"current":{"title":"Price","type":"object","required":["currency","decimals","value"],"properties":{"currency":{"title":"Currency","type":"string"},"decimals":{"title":"Decimals","type":"integer"},"value":{"title":"Value","type":"string"}}}},"required":["current"]},"protocol_data":{"title":"Protocol Data","description":"The onchain order data.","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address","type":"string"}},"required":["order_hash","chain","type","price","protocol_data","protocol_address"]},{"title":"Offer","type":"object","properties":{"order_hash":{"title":"Order Hash","description":"Order hash","type":"string"},"chain":{"title":"ChainIdentifier","description":"OpenSea supported chains.\n\n`ethereum` `matic` `klaytn` `bsc` `solana` `arbitrum` `arbitrum_nova` `avalanche` `optimism` `base` `blast` `zora` `sepolia` `rinkeby` `mumbai` `amoy` `baobab` `bsctestnet` `goerli` `soldev` `arbitrum_goerli` `arbitrum_sepolia` `avalanche_fuji` `optimism_goerli` `optimism_sepolia` `base_goerli` `base_sepolia` `blast_sepolia` `gunzilla_testnet` `sei_devnet` `zora_testnet` `zora_sepolia`","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"],"properties":{},"type":"object"},"price":{"title":"PriceModel","type":"object","properties":{"currency":{"title":"Currency","type":"string"},"decimals":{"title":"Decimals","type":"integer"},"value":{"title":"Value","type":"string"}},"required":["currency","decimals","value"]},"criteria":{"title":"Criteria","description":"Criteria for collection or trait offers","type":"object","required":["collection","contract"],"properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}}},"protocol_data":{"title":"Protocol Data","description":"The onchain order data.","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address","type":"string"}},"required":["order_hash","chain","price","criteria","protocol_data","protocol_address"]}]}},"required":["order"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetPaymentToken = {"metadata":{"allOf":[{"type":"object","properties":{"address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The public blockchain address."},"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."}},"required":["address","chain"]}]},"response":{"200":{"title":"PaymentTokenModel","type":"object","properties":{"symbol":{"title":"Symbol","description":"The symbol of the payment token","type":"string"},"address":{"title":"Address","description":"The public blockchain address of the contract","type":"string"},"chain":{"title":"Chain","description":"The chain on which the contract exists","type":"string"},"image":{"title":"Image","description":"The image of the payment token","type":"string"},"name":{"title":"Name","description":"The name of the contract","type":"string"},"decimals":{"title":"Decimals","description":"The number of decimals of the contract","type":"integer"},"eth_price":{"title":"Eth Price","description":"The price of the payment token in ETH","type":"string"},"usd_price":{"title":"Usd Price","description":"The price of the payment token in USD","type":"string"}},"required":["symbol","address","chain","image","name","decimals","eth_price","usd_price"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetTraitOffersV2 = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."}},"required":["collection_slug"]},{"type":"object","properties":{"float_value":{"type":"number","format":"float","minimum":-3.402823669209385e+38,"maximum":3.402823669209385e+38,"$schema":"http://json-schema.org/draft-04/schema#","description":"The value of the trait (e.g. `0.5`). This is only used for decimal-based numeric traits to ensure it is parsed correctly."},"int_value":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The value of the trait (e.g. `10`). This is only used for numeric traits to ensure it is parsed correctly."},"type":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the trait (e.g. 'Background')"},"value":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The value of the trait (e.g. 'Red')"}},"required":[]}]},"response":{"200":{"title":"Offer List","type":"object","properties":{"offers":{"title":"Offers","type":"array","items":{"title":"Offer","type":"object","properties":{"order_hash":{"title":"Order Hash","description":"Order hash","type":"string"},"chain":{"title":"ChainIdentifier","description":"OpenSea supported chains.\n\n`ethereum` `matic` `klaytn` `bsc` `solana` `arbitrum` `arbitrum_nova` `avalanche` `optimism` `base` `blast` `zora` `sepolia` `rinkeby` `mumbai` `amoy` `baobab` `bsctestnet` `goerli` `soldev` `arbitrum_goerli` `arbitrum_sepolia` `avalanche_fuji` `optimism_goerli` `optimism_sepolia` `base_goerli` `base_sepolia` `blast_sepolia` `gunzilla_testnet` `sei_devnet` `zora_testnet` `zora_sepolia`","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"],"properties":{},"type":"object"},"price":{"title":"PriceModel","type":"object","properties":{"currency":{"title":"Currency","type":"string"},"decimals":{"title":"Decimals","type":"integer"},"value":{"title":"Value","type":"string"}},"required":["currency","decimals","value"]},"criteria":{"title":"Criteria","description":"Criteria for collection or trait offers","type":"object","required":["collection","contract"],"properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}}},"protocol_data":{"title":"Protocol Data","description":"The onchain order data.","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address","type":"string"}},"required":["order_hash","chain","price","criteria","protocol_data","protocol_address"]}}},"required":["offers"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetTraits = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."}},"required":["collection_slug"]}]},"response":{"200":{"title":"GetTraitResponse","type":"object","properties":{"categories":{"description":"List of trait categories, e.g. Background, in the collection and their type, e.g. string","type":"object","additionalProperties":{"title":"CategoryType","description":"An enumeration.\n\n`string` `number`","enum":["string","number"],"type":"string","properties":{}}},"counts":{"title":"Counts","description":"If the category type is STRING, the dict will contain each trait value and its count. Otherwise, the dict will contain the min and max value seen in the collection","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"integer"}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListCollections = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."},"creator_username":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"If set, will only return collections created by the given OpenSea username."},"include_hidden":{"type":"boolean","$schema":"http://json-schema.org/draft-04/schema#","description":"If true, will return hidden collections. Default: false"},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of collections to return. Must be between 1 and 100. Default: 100"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"ListCollectionsResponse","type":"object","properties":{"collections":{"title":"Collection","type":"array","items":{"title":"CollectionModel","type":"object","properties":{"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"name":{"title":"Name","description":"Name of the collection","type":"string"},"description":{"title":"Description","description":"Description of the collection","type":"string"},"image_url":{"title":"Image Url","description":"Square image used to represent the collection","type":"string"},"banner_image_url":{"title":"Banner Image Url","description":"Banner image used to represent the collection","type":"string"},"owner":{"title":"Owner","description":"The public blockchain address of the owner.","type":"string"},"safelist_status":{"title":"SafelistRequestStatus","description":"Status of the collection verification requests.\n\n`not_requested` `requested` `approved` `verified` `disabled_top_trending`","enum":["not_requested","requested","approved","verified","disabled_top_trending"],"properties":{},"type":"object"},"category":{"title":"Category","description":"Category of the collection (e.g. PFPs, Memberships, Art)","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the collection is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the collection is currently classified as 'Not Safe for Work' as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"},"trait_offers_enabled":{"title":"Trait Offers Enabled","description":"If trait offers are currently being accepted for the collection","type":"boolean"},"collection_offers_enabled":{"title":"Collection Offers Enabled","description":"If collection offers are currently being accepted for the collection","type":"boolean"},"opensea_url":{"title":"Opensea Url","description":"OpenSea Link to collection","type":"string"},"project_url":{"title":"Project Url","description":"External URL for the collection's website","type":"string"},"wiki_url":{"title":"Wiki Url","description":"External URL for the collection's wiki","type":"string"},"discord_url":{"title":"Discord Url","description":"External URL for the collection's Discord server","type":"string"},"telegram_url":{"title":"Telegram Url","description":"External URL for the collection's Telegram group","type":"string"},"twitter_username":{"title":"Twitter Username","description":"Username for the collection's Twitter account","type":"string"},"instagram_username":{"title":"Instagram Username","description":"Username for the collection's Instagram account","type":"string"},"contracts":{"title":"Contracts","description":"Contracts for the collection","type":"array","items":{"title":"CollectionContractModel","description":"Define the Contract's Addresses and Chain","type":"object","properties":{"address":{"title":"Address","description":"The public blockchain address of the contract.","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]}},"required":["address","chain"]}}},"required":["collection","name","owner","safelist_status","category","is_disabled","is_nsfw","trait_offers_enabled","collection_offers_enabled","opensea_url","contracts"]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["collections","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListEvents = {"metadata":{"allOf":[{"type":"object","properties":{"after":{"type":"number","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include events that occurred at or after the given timestamp. The Unix epoch timstamp must be in seconds"},"before":{"type":"number","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include events that occurred before the given timestamp. The Unix epoch timstamp must be in seconds."},"event_type":{"type":"array","items":{"type":"string","enum":["all","cancel","listing","offer","order","redemption","sale","transfer"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"The type of event to filter by. If not provided, only sales will be returned."},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of events to return. Must be between 1 and 50. Default: 50"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"ListEventsResponse","type":"object","properties":{"asset_events":{"title":"Events","type":"array","items":{"anyOf":[{"title":"CancelEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"cancel","enum":["cancel"],"type":"string","description":"`cancel`"},"order_hash":{"title":"Order Hash","description":"Order hash for the order which was cancelled","type":"string"},"order_type":{"description":"An enumeration.","title":"APIOrderType","enum":["listing","auction","item_offer","collection_offer","trait_offer"]},"maker":{"title":"Maker","description":"Maker of the original order","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was cancelled","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}}},"required":["order_hash","order_type","maker","chain","event_timestamp","nft"]},{"title":"OrderEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"order","enum":["order"],"type":"string","description":"`order`"},"order_hash":{"title":"Order Hash","description":"Order hash for the newly created order","type":"string"},"order_type":{"title":"APIOrderType","description":"An enumeration.\n\n`listing` `auction` `item_offer` `collection_offer` `trait_offer`","enum":["listing","auction","item_offer","collection_offer","trait_offer"],"properties":{},"type":"object"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address for the order","type":"string"},"start_date":{"title":"Start Date","description":"The Posix timestamp at which the order was created","type":"integer"},"expiration_date":{"title":"Expiration Date","description":"The Posix timestamp at which the order will close. When no expiration date is set, this value will be 0.","type":"integer"},"asset":{"title":"Asset","description":"The nft being listed or bid on. Empty object for collection or trait offers.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets in the order","type":"integer"},"maker":{"title":"Maker","description":"Maker of the order","type":"string"},"taker":{"title":"Taker","description":"Taker of the order. This will only be set for private listings.","type":"string"},"payment":{"title":"Information about the payment","type":"object","required":["quantity","token_address","decimals","symbol"],"properties":{"quantity":{"title":"Quantity","description":"Amount of tokens in the order. Defaults to 0 if quantity can not be determined.","type":"string"},"token_address":{"title":"Token Address","description":"The contract address for the ERC20 token","type":"string"},"decimals":{"title":"Decimals","description":"Returns the number of decimals the token uses - e.g. 8, means to divide the token amount by 100000000 to get its user representation.","type":"integer"},"symbol":{"title":"Symbol","description":"Returns the symbol of the token, e.g. ETH, WETH, USDC, etc","type":"string"}}},"criteria":{"title":"Criteria","description":"For collection and trait offers, this object will contain the criteria needed to fulfill the offer.","anyOf":[{"title":"Criteria","type":"object","properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}},"required":["collection","contract"]},{"type":"object","additionalProperties":true}]},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"},"is_private_listing":{"title":"Is Private Listing","description":"Whether the order is a private listing","type":"boolean"}},"required":["order_hash","chain","protocol_address","start_date","expiration_date","asset","quantity","maker","taker","payment","criteria","event_timestamp","is_private_listing"]},{"title":"SaleEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"sale","enum":["sale"],"type":"string","description":"`sale`"},"order_hash":{"title":"Order Hash","description":"Order hash for the order which was fulfilled","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address which fulfilled the order","type":"string"},"closing_date":{"title":"Closing Date","description":"The Posix timestamp at which the transaction which filled the order occurred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was sold.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets transferred","type":"integer"},"seller":{"title":"Seller","description":"Seller of the NFT","type":"string"},"buyer":{"title":"Buyer","description":"Buyer of the NFT","type":"string"},"payment":{"title":"Information about the payment","type":"object","required":["quantity","token_address","decimals","symbol"],"properties":{"quantity":{"title":"Quantity","description":"Amount of tokens in the order. Defaults to 0 if quantity can not be determined.","type":"string"},"token_address":{"title":"Token Address","description":"The contract address for the ERC20 token","type":"string"},"decimals":{"title":"Decimals","description":"Returns the number of decimals the token uses - e.g. 8, means to divide the token amount by 100000000 to get its user representation.","type":"integer"},"symbol":{"title":"Symbol","description":"Returns the symbol of the token, e.g. ETH, WETH, USDC, etc","type":"string"}}},"transaction":{"title":"Transaction","description":"Transaction hash for the order fulfillment","type":"string"},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["order_hash","chain","protocol_address","closing_date","nft","quantity","seller","buyer","payment","transaction","event_timestamp"]},{"title":"TransferEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"transfer","enum":["transfer"],"type":"string","description":"`transfer`"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"transaction":{"title":"Transaction","description":"Transaction hash for the transfer","type":"string"},"from_address":{"title":"From Address","description":"Address of the sender","type":"string"},"to_address":{"title":"To Address","description":"Address of the recipient","type":"string"},"quantity":{"title":"Quantity","description":"Number of assets transferred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was transferred","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["chain","transaction","from_address","to_address","quantity","nft","event_timestamp"]},{"title":"RedemptionEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"redemption","enum":["redemption"],"type":"string","description":"`redemption`"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"from_address":{"title":"From Address","description":"Address of the sender","type":"string"},"to_address":{"title":"To Address","description":"Address of the recipient","type":"string"},"asset":{"title":"Asset","description":"The asset being redeemed.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets redeemed","type":"integer"},"transaction":{"title":"Transaction","description":"Transaction hash for the redemption","type":"string"},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["chain","from_address","to_address","asset","quantity","transaction","event_timestamp"]}]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["asset_events","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListEventsByAccount = {"metadata":{"allOf":[{"type":"object","properties":{"address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The public blockchain address."}},"required":["address"]},{"type":"object","properties":{"after":{"type":"number","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include events that occurred at or after the given timestamp. The Unix epoch timstamp must be in seconds"},"before":{"type":"number","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include events that occurred before the given timestamp. The Unix epoch timstamp must be in seconds."},"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."},"event_type":{"type":"array","items":{"type":"string","enum":["all","cancel","listing","offer","order","redemption","sale","transfer"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"The type of event to filter by. If not provided, only sales will be returned."},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of events to return. Must be between 1 and 50. Default: 50"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"ListEventsResponse","type":"object","properties":{"asset_events":{"title":"Events","type":"array","items":{"anyOf":[{"title":"CancelEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"cancel","enum":["cancel"],"type":"string","description":"`cancel`"},"order_hash":{"title":"Order Hash","description":"Order hash for the order which was cancelled","type":"string"},"order_type":{"description":"An enumeration.","title":"APIOrderType","enum":["listing","auction","item_offer","collection_offer","trait_offer"]},"maker":{"title":"Maker","description":"Maker of the original order","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was cancelled","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}}},"required":["order_hash","order_type","maker","chain","event_timestamp","nft"]},{"title":"OrderEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"order","enum":["order"],"type":"string","description":"`order`"},"order_hash":{"title":"Order Hash","description":"Order hash for the newly created order","type":"string"},"order_type":{"title":"APIOrderType","description":"An enumeration.\n\n`listing` `auction` `item_offer` `collection_offer` `trait_offer`","enum":["listing","auction","item_offer","collection_offer","trait_offer"],"properties":{},"type":"object"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address for the order","type":"string"},"start_date":{"title":"Start Date","description":"The Posix timestamp at which the order was created","type":"integer"},"expiration_date":{"title":"Expiration Date","description":"The Posix timestamp at which the order will close. When no expiration date is set, this value will be 0.","type":"integer"},"asset":{"title":"Asset","description":"The nft being listed or bid on. Empty object for collection or trait offers.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets in the order","type":"integer"},"maker":{"title":"Maker","description":"Maker of the order","type":"string"},"taker":{"title":"Taker","description":"Taker of the order. This will only be set for private listings.","type":"string"},"payment":{"title":"Information about the payment","type":"object","required":["quantity","token_address","decimals","symbol"],"properties":{"quantity":{"title":"Quantity","description":"Amount of tokens in the order. Defaults to 0 if quantity can not be determined.","type":"string"},"token_address":{"title":"Token Address","description":"The contract address for the ERC20 token","type":"string"},"decimals":{"title":"Decimals","description":"Returns the number of decimals the token uses - e.g. 8, means to divide the token amount by 100000000 to get its user representation.","type":"integer"},"symbol":{"title":"Symbol","description":"Returns the symbol of the token, e.g. ETH, WETH, USDC, etc","type":"string"}}},"criteria":{"title":"Criteria","description":"For collection and trait offers, this object will contain the criteria needed to fulfill the offer.","anyOf":[{"title":"Criteria","type":"object","properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}},"required":["collection","contract"]},{"type":"object","additionalProperties":true}]},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"},"is_private_listing":{"title":"Is Private Listing","description":"Whether the order is a private listing","type":"boolean"}},"required":["order_hash","chain","protocol_address","start_date","expiration_date","asset","quantity","maker","taker","payment","criteria","event_timestamp","is_private_listing"]},{"title":"SaleEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"sale","enum":["sale"],"type":"string","description":"`sale`"},"order_hash":{"title":"Order Hash","description":"Order hash for the order which was fulfilled","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address which fulfilled the order","type":"string"},"closing_date":{"title":"Closing Date","description":"The Posix timestamp at which the transaction which filled the order occurred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was sold.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets transferred","type":"integer"},"seller":{"title":"Seller","description":"Seller of the NFT","type":"string"},"buyer":{"title":"Buyer","description":"Buyer of the NFT","type":"string"},"payment":{"title":"Information about the payment","type":"object","required":["quantity","token_address","decimals","symbol"],"properties":{"quantity":{"title":"Quantity","description":"Amount of tokens in the order. Defaults to 0 if quantity can not be determined.","type":"string"},"token_address":{"title":"Token Address","description":"The contract address for the ERC20 token","type":"string"},"decimals":{"title":"Decimals","description":"Returns the number of decimals the token uses - e.g. 8, means to divide the token amount by 100000000 to get its user representation.","type":"integer"},"symbol":{"title":"Symbol","description":"Returns the symbol of the token, e.g. ETH, WETH, USDC, etc","type":"string"}}},"transaction":{"title":"Transaction","description":"Transaction hash for the order fulfillment","type":"string"},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["order_hash","chain","protocol_address","closing_date","nft","quantity","seller","buyer","payment","transaction","event_timestamp"]},{"title":"TransferEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"transfer","enum":["transfer"],"type":"string","description":"`transfer`"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"transaction":{"title":"Transaction","description":"Transaction hash for the transfer","type":"string"},"from_address":{"title":"From Address","description":"Address of the sender","type":"string"},"to_address":{"title":"To Address","description":"Address of the recipient","type":"string"},"quantity":{"title":"Quantity","description":"Number of assets transferred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was transferred","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["chain","transaction","from_address","to_address","quantity","nft","event_timestamp"]},{"title":"RedemptionEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"redemption","enum":["redemption"],"type":"string","description":"`redemption`"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"from_address":{"title":"From Address","description":"Address of the sender","type":"string"},"to_address":{"title":"To Address","description":"Address of the recipient","type":"string"},"asset":{"title":"Asset","description":"The asset being redeemed.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets redeemed","type":"integer"},"transaction":{"title":"Transaction","description":"Transaction hash for the redemption","type":"string"},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["chain","from_address","to_address","asset","quantity","transaction","event_timestamp"]}]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["asset_events","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListEventsByCollection = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."}},"required":["collection_slug"]},{"type":"object","properties":{"after":{"type":"number","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include events that occurred at or after the given timestamp. The Unix epoch timstamp must be in seconds"},"before":{"type":"number","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include events that occurred before the given timestamp. The Unix epoch timstamp must be in seconds."},"event_type":{"type":"array","items":{"type":"string","enum":["all","cancel","listing","offer","order","redemption","sale","transfer"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"The type of event to filter by. If not provided, only sales will be returned."},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of events to return. Must be between 1 and 50. Default: 50"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"ListEventsResponse","type":"object","properties":{"asset_events":{"title":"Events","type":"array","items":{"anyOf":[{"title":"CancelEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"cancel","enum":["cancel"],"type":"string","description":"`cancel`"},"order_hash":{"title":"Order Hash","description":"Order hash for the order which was cancelled","type":"string"},"order_type":{"description":"An enumeration.","title":"APIOrderType","enum":["listing","auction","item_offer","collection_offer","trait_offer"]},"maker":{"title":"Maker","description":"Maker of the original order","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was cancelled","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}}},"required":["order_hash","order_type","maker","chain","event_timestamp","nft"]},{"title":"OrderEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"order","enum":["order"],"type":"string","description":"`order`"},"order_hash":{"title":"Order Hash","description":"Order hash for the newly created order","type":"string"},"order_type":{"title":"APIOrderType","description":"An enumeration.\n\n`listing` `auction` `item_offer` `collection_offer` `trait_offer`","enum":["listing","auction","item_offer","collection_offer","trait_offer"],"properties":{},"type":"object"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address for the order","type":"string"},"start_date":{"title":"Start Date","description":"The Posix timestamp at which the order was created","type":"integer"},"expiration_date":{"title":"Expiration Date","description":"The Posix timestamp at which the order will close. When no expiration date is set, this value will be 0.","type":"integer"},"asset":{"title":"Asset","description":"The nft being listed or bid on. Empty object for collection or trait offers.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets in the order","type":"integer"},"maker":{"title":"Maker","description":"Maker of the order","type":"string"},"taker":{"title":"Taker","description":"Taker of the order. This will only be set for private listings.","type":"string"},"payment":{"title":"Information about the payment","type":"object","required":["quantity","token_address","decimals","symbol"],"properties":{"quantity":{"title":"Quantity","description":"Amount of tokens in the order. Defaults to 0 if quantity can not be determined.","type":"string"},"token_address":{"title":"Token Address","description":"The contract address for the ERC20 token","type":"string"},"decimals":{"title":"Decimals","description":"Returns the number of decimals the token uses - e.g. 8, means to divide the token amount by 100000000 to get its user representation.","type":"integer"},"symbol":{"title":"Symbol","description":"Returns the symbol of the token, e.g. ETH, WETH, USDC, etc","type":"string"}}},"criteria":{"title":"Criteria","description":"For collection and trait offers, this object will contain the criteria needed to fulfill the offer.","anyOf":[{"title":"Criteria","type":"object","properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}},"required":["collection","contract"]},{"type":"object","additionalProperties":true}]},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"},"is_private_listing":{"title":"Is Private Listing","description":"Whether the order is a private listing","type":"boolean"}},"required":["order_hash","chain","protocol_address","start_date","expiration_date","asset","quantity","maker","taker","payment","criteria","event_timestamp","is_private_listing"]},{"title":"SaleEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"sale","enum":["sale"],"type":"string","description":"`sale`"},"order_hash":{"title":"Order Hash","description":"Order hash for the order which was fulfilled","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address which fulfilled the order","type":"string"},"closing_date":{"title":"Closing Date","description":"The Posix timestamp at which the transaction which filled the order occurred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was sold.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets transferred","type":"integer"},"seller":{"title":"Seller","description":"Seller of the NFT","type":"string"},"buyer":{"title":"Buyer","description":"Buyer of the NFT","type":"string"},"payment":{"title":"Information about the payment","type":"object","required":["quantity","token_address","decimals","symbol"],"properties":{"quantity":{"title":"Quantity","description":"Amount of tokens in the order. Defaults to 0 if quantity can not be determined.","type":"string"},"token_address":{"title":"Token Address","description":"The contract address for the ERC20 token","type":"string"},"decimals":{"title":"Decimals","description":"Returns the number of decimals the token uses - e.g. 8, means to divide the token amount by 100000000 to get its user representation.","type":"integer"},"symbol":{"title":"Symbol","description":"Returns the symbol of the token, e.g. ETH, WETH, USDC, etc","type":"string"}}},"transaction":{"title":"Transaction","description":"Transaction hash for the order fulfillment","type":"string"},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["order_hash","chain","protocol_address","closing_date","nft","quantity","seller","buyer","payment","transaction","event_timestamp"]},{"title":"TransferEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"transfer","enum":["transfer"],"type":"string","description":"`transfer`"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"transaction":{"title":"Transaction","description":"Transaction hash for the transfer","type":"string"},"from_address":{"title":"From Address","description":"Address of the sender","type":"string"},"to_address":{"title":"To Address","description":"Address of the recipient","type":"string"},"quantity":{"title":"Quantity","description":"Number of assets transferred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was transferred","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["chain","transaction","from_address","to_address","quantity","nft","event_timestamp"]},{"title":"RedemptionEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"redemption","enum":["redemption"],"type":"string","description":"`redemption`"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"from_address":{"title":"From Address","description":"Address of the sender","type":"string"},"to_address":{"title":"To Address","description":"Address of the recipient","type":"string"},"asset":{"title":"Asset","description":"The asset being redeemed.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets redeemed","type":"integer"},"transaction":{"title":"Transaction","description":"Transaction hash for the redemption","type":"string"},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["chain","from_address","to_address","asset","quantity","transaction","event_timestamp"]}]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["asset_events","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListEventsByNft = {"metadata":{"allOf":[{"type":"object","properties":{"address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The public blockchain address."},"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."},"identifier":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The NFT token id."}},"required":["address","chain","identifier"]},{"type":"object","properties":{"after":{"type":"number","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include events that occurred at or after the given timestamp. The Unix epoch timstamp must be in seconds"},"before":{"type":"number","$schema":"http://json-schema.org/draft-04/schema#","description":"Filter to only include events that occurred before the given timestamp. The Unix epoch timstamp must be in seconds."},"event_type":{"type":"array","items":{"type":"string","enum":["all","cancel","listing","offer","order","redemption","sale","transfer"]},"$schema":"http://json-schema.org/draft-04/schema#","description":"The type of event to filter by. If not provided, only sales will be returned."},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of events to return. Must be between 1 and 50. Default: 50"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"ListEventsResponse","type":"object","properties":{"asset_events":{"title":"Events","type":"array","items":{"anyOf":[{"title":"CancelEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"cancel","enum":["cancel"],"type":"string","description":"`cancel`"},"order_hash":{"title":"Order Hash","description":"Order hash for the order which was cancelled","type":"string"},"order_type":{"description":"An enumeration.","title":"APIOrderType","enum":["listing","auction","item_offer","collection_offer","trait_offer"]},"maker":{"title":"Maker","description":"Maker of the original order","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was cancelled","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}}},"required":["order_hash","order_type","maker","chain","event_timestamp","nft"]},{"title":"OrderEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"order","enum":["order"],"type":"string","description":"`order`"},"order_hash":{"title":"Order Hash","description":"Order hash for the newly created order","type":"string"},"order_type":{"title":"APIOrderType","description":"An enumeration.\n\n`listing` `auction` `item_offer` `collection_offer` `trait_offer`","enum":["listing","auction","item_offer","collection_offer","trait_offer"],"properties":{},"type":"object"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address for the order","type":"string"},"start_date":{"title":"Start Date","description":"The Posix timestamp at which the order was created","type":"integer"},"expiration_date":{"title":"Expiration Date","description":"The Posix timestamp at which the order will close. When no expiration date is set, this value will be 0.","type":"integer"},"asset":{"title":"Asset","description":"The nft being listed or bid on. Empty object for collection or trait offers.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets in the order","type":"integer"},"maker":{"title":"Maker","description":"Maker of the order","type":"string"},"taker":{"title":"Taker","description":"Taker of the order. This will only be set for private listings.","type":"string"},"payment":{"title":"Information about the payment","type":"object","required":["quantity","token_address","decimals","symbol"],"properties":{"quantity":{"title":"Quantity","description":"Amount of tokens in the order. Defaults to 0 if quantity can not be determined.","type":"string"},"token_address":{"title":"Token Address","description":"The contract address for the ERC20 token","type":"string"},"decimals":{"title":"Decimals","description":"Returns the number of decimals the token uses - e.g. 8, means to divide the token amount by 100000000 to get its user representation.","type":"integer"},"symbol":{"title":"Symbol","description":"Returns the symbol of the token, e.g. ETH, WETH, USDC, etc","type":"string"}}},"criteria":{"title":"Criteria","description":"For collection and trait offers, this object will contain the criteria needed to fulfill the offer.","anyOf":[{"title":"Criteria","type":"object","properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}},"required":["collection","contract"]},{"type":"object","additionalProperties":true}]},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"},"is_private_listing":{"title":"Is Private Listing","description":"Whether the order is a private listing","type":"boolean"}},"required":["order_hash","chain","protocol_address","start_date","expiration_date","asset","quantity","maker","taker","payment","criteria","event_timestamp","is_private_listing"]},{"title":"SaleEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"sale","enum":["sale"],"type":"string","description":"`sale`"},"order_hash":{"title":"Order Hash","description":"Order hash for the order which was fulfilled","type":"string"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address which fulfilled the order","type":"string"},"closing_date":{"title":"Closing Date","description":"The Posix timestamp at which the transaction which filled the order occurred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was sold.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets transferred","type":"integer"},"seller":{"title":"Seller","description":"Seller of the NFT","type":"string"},"buyer":{"title":"Buyer","description":"Buyer of the NFT","type":"string"},"payment":{"title":"Information about the payment","type":"object","required":["quantity","token_address","decimals","symbol"],"properties":{"quantity":{"title":"Quantity","description":"Amount of tokens in the order. Defaults to 0 if quantity can not be determined.","type":"string"},"token_address":{"title":"Token Address","description":"The contract address for the ERC20 token","type":"string"},"decimals":{"title":"Decimals","description":"Returns the number of decimals the token uses - e.g. 8, means to divide the token amount by 100000000 to get its user representation.","type":"integer"},"symbol":{"title":"Symbol","description":"Returns the symbol of the token, e.g. ETH, WETH, USDC, etc","type":"string"}}},"transaction":{"title":"Transaction","description":"Transaction hash for the order fulfillment","type":"string"},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["order_hash","chain","protocol_address","closing_date","nft","quantity","seller","buyer","payment","transaction","event_timestamp"]},{"title":"TransferEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"transfer","enum":["transfer"],"type":"string","description":"`transfer`"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"transaction":{"title":"Transaction","description":"Transaction hash for the transfer","type":"string"},"from_address":{"title":"From Address","description":"Address of the sender","type":"string"},"to_address":{"title":"To Address","description":"Address of the recipient","type":"string"},"quantity":{"title":"Quantity","description":"Number of assets transferred","type":"integer"},"nft":{"title":"Nft","description":"The NFT which was transferred","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["chain","transaction","from_address","to_address","quantity","nft","event_timestamp"]},{"title":"RedemptionEventModel","type":"object","properties":{"event_type":{"title":"Event Type","default":"redemption","enum":["redemption"],"type":"string","description":"`redemption`"},"chain":{"description":"OpenSea supported chains.","title":"ChainIdentifier","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"]},"from_address":{"title":"From Address","description":"Address of the sender","type":"string"},"to_address":{"title":"To Address","description":"Address of the recipient","type":"string"},"asset":{"title":"Asset","description":"The asset being redeemed.","type":"object","required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"],"properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}}},"quantity":{"title":"Quantity","description":"Number of assets redeemed","type":"integer"},"transaction":{"title":"Transaction","description":"Transaction hash for the redemption","type":"string"},"event_timestamp":{"title":"Event Timestamp","description":"The Posix timestamp at which the event occurred","type":"integer"}},"required":["chain","from_address","to_address","asset","quantity","transaction","event_timestamp"]}]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["asset_events","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListNftsByAccount = {"metadata":{"allOf":[{"type":"object","properties":{"address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The public blockchain address."},"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."}},"required":["address","chain"]},{"type":"object","properties":{"collection":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of NFTs to return. Must be between 1 and 200. Default: 50"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"ListNftsResponse","type":"object","properties":{"nfts":{"title":"NFT","type":"array","items":{"title":"NftModel","type":"object","properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}},"required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["nfts","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListNftsByCollection = {"metadata":{"allOf":[{"type":"object","properties":{"collection_slug":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter."}},"required":["collection_slug"]},{"type":"object","properties":{"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of NFTs to return. Must be between 1 and 200. Default: 50"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"ListNftsResponse","type":"object","properties":{"nfts":{"title":"NFT","type":"array","items":{"title":"NftModel","type":"object","properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}},"required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["nfts","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListNftsByContract = {"metadata":{"allOf":[{"type":"object","properties":{"address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The public blockchain address."},"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."}},"required":["address","chain"]},{"type":"object","properties":{"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of NFTs to return. Must be between 1 and 200. Default: 50"},"next":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The cursor for the next page of results. This is returned from a previous request."}},"required":[]}]},"response":{"200":{"title":"ListNftsResponse","type":"object","properties":{"nfts":{"title":"NFT","type":"array","items":{"title":"NftModel","type":"object","properties":{"identifier":{"title":"Identifier","description":"The NFT's unique identifier within the smart contract (also referred to as token_id)","type":"string"},"collection":{"title":"Collection","description":"Collection slug. A unique string to identify a collection on OpenSea","type":"string"},"contract":{"title":"Contract","description":"The public blockchain address of the contract","type":"string"},"token_standard":{"title":"Token Standard","description":"ERC standard of the token (erc721, erc1155)","type":"string"},"name":{"title":"Name","description":"Name of the NFT","type":"string"},"description":{"title":"Description","description":"Description of the NFT","type":"string"},"image_url":{"title":"Image Url","description":"Link to the image associated with the NFT","type":"string"},"metadata_url":{"title":"Metadata Url","description":"Link to the offchain metadata store","type":"string"},"opensea_url":{"title":"Opensea Url","description":"Link to the NFT on OpenSea","type":"string"},"updated_at":{"title":"Updated At","description":"Last time that the NFT's metadata was updated by OpenSea","type":"string"},"is_disabled":{"title":"Is Disabled","description":"If the item is currently able to be bought or sold using OpenSea","type":"boolean"},"is_nsfw":{"title":"Is Nsfw","description":"If the item is currently classified as 'Not Safe for Work' by OpenSea as defined in [OpenSea's NSFW Policy](https://support.opensea.io/hc/articles/9729972510995).","type":"boolean"}},"required":["identifier","collection","contract","token_standard","name","description","updated_at","is_disabled","is_nsfw"]}},"next":{"title":"Next","description":"Cursor for the next page of results","type":"string"}},"required":["nfts","next"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostCriteriaOfferV2 = {"body":{"title":"PostCriteriaOfferInput","type":"object","properties":{"protocol_data":{"title":"Signed Seaport Order","description":"The signed order which will be submitted to Seaport","type":"object","required":["parameters","signature"],"properties":{"parameters":{"title":"Order Components","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","description":"Array of items that may be transferred from the offerer's account.","type":"array","items":{"title":"OfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"integer"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"integer"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"integer"}}}},"consideration":{"title":"Consideration","description":"Array of items which must be received by a recipient to fulfill the order. One of the consideration items must be the OpenSea marketplace fee.","type":"array","items":{"title":"ConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"integer"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"integer"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"integer"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"integer"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires.","type":"integer"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","description":"Must match the current counter for the given offerer. If you are unsure of the current counter, it can be [read from the contract](https://etherscan.io/address/0x00000000000000adc04c56bf30ac9d3c0aaf14dc#readContract#F2) on etherscan.","type":"string"}}},"signature":{"title":"Signature","description":"Signature of the signed type data represented by the parameters field.","type":"string"}}},"criteria":{"title":"Criteria","description":"Criteria for the collection or trait offer","type":"object","required":["collection","contract"],"properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address. Must be one of ['0x0000000000000068f116a894984e2db1123eb395']","type":"string"}},"required":["protocol_data","criteria","protocol_address"],"additionalProperties":false,"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"title":"Offer","type":"object","properties":{"order_hash":{"title":"Order Hash","description":"Order hash","type":"string"},"chain":{"title":"ChainIdentifier","description":"OpenSea supported chains.\n\n`ethereum` `matic` `klaytn` `bsc` `solana` `arbitrum` `arbitrum_nova` `avalanche` `optimism` `base` `blast` `zora` `sepolia` `rinkeby` `mumbai` `amoy` `baobab` `bsctestnet` `goerli` `soldev` `arbitrum_goerli` `arbitrum_sepolia` `avalanche_fuji` `optimism_goerli` `optimism_sepolia` `base_goerli` `base_sepolia` `blast_sepolia` `gunzilla_testnet` `sei_devnet` `zora_testnet` `zora_sepolia`","enum":["ethereum","matic","klaytn","bsc","solana","arbitrum","arbitrum_nova","avalanche","optimism","base","blast","zora","sepolia","rinkeby","mumbai","amoy","baobab","bsctestnet","goerli","soldev","arbitrum_goerli","arbitrum_sepolia","avalanche_fuji","optimism_goerli","optimism_sepolia","base_goerli","base_sepolia","blast_sepolia","gunzilla_testnet","sei_devnet","zora_testnet","zora_sepolia"],"properties":{},"type":"object"},"price":{"title":"PriceModel","type":"object","properties":{"currency":{"title":"Currency","type":"string"},"decimals":{"title":"Decimals","type":"integer"},"value":{"title":"Value","type":"string"}},"required":["currency","decimals","value"]},"criteria":{"title":"Criteria","description":"Criteria for collection or trait offers","type":"object","required":["collection","contract"],"properties":{"collection":{"title":"Collection","description":"The collection in which the criteria offer is being made for.","type":"object","required":["slug"],"properties":{"slug":{"title":"Slug","description":"Unique string to identify a collection on OpenSea. This can be found by visiting the collection on the OpenSea website and noting the last path parameter.","type":"string"}}},"contract":{"title":"Contract","description":"The public blockchain address of the NFT contract","type":"object","required":["address"],"properties":{"address":{"title":"Address","type":"string"}}},"trait":{"title":"Trait","description":"The trait that the criteria offer is being made for.","type":"object","required":["type","value"],"properties":{"type":{"title":"Type","type":"string"},"value":{"title":"Value","type":"string"}}},"encoded_token_ids":{"title":"Encoded Token Ids","description":"Represents a list of token ids which can be used to fulfill the criteria offer. When decoded using the provided SDK function, developers can now see a list of all tokens that could be used to fulfill the offer.","type":"string"}}},"protocol_data":{"title":"Protocol Data","description":"The onchain order data.","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address","type":"string"}},"required":["order_hash","chain","price","criteria","protocol_data","protocol_address"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostListing = {"body":{"title":"OrderInputWithProtocol","type":"object","properties":{"parameters":{"title":"Order Components","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","description":"Array of items that may be transferred from the offerer's account.","type":"array","items":{"title":"OfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"integer"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"integer"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"integer"}}}},"consideration":{"title":"Consideration","description":"Array of items which must be received by a recipient to fulfill the order. One of the consideration items must be the OpenSea marketplace fee.","type":"array","items":{"title":"ConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"integer"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"integer"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"integer"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"integer"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires.","type":"integer"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","description":"Must match the current counter for the given offerer. If you are unsure of the current counter, it can be [read from the contract](https://etherscan.io/address/0x00000000000000adc04c56bf30ac9d3c0aaf14dc#readContract#F2) on etherscan.","type":"string"}}},"signature":{"title":"Signature","description":"Signature of the signed type data represented by the parameters field.","type":"string"},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address. Must be one of ['0x0000000000000068f116a894984e2db1123eb395']","type":"string"}},"required":["parameters","signature","protocol_address"],"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."},"protocol":{"type":"string","enum":["seaport"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The token settlement protocol to use in the request."}},"required":["chain","protocol"]}]},"response":{"200":{"type":"object","properties":{"order":{"type":"object","description":"OpenSea Order Object","properties":{"created_date":{"type":"string","format":"date-time","description":"Date the order was created"},"closing_date":{"type":"string","format":"date-time","description":"Date the order was closed"},"listing_time":{"type":"integer","readOnly":true,"description":"Timestamp representation of created_date"},"expiration_time":{"type":"integer","readOnly":true,"description":"Timestamp representation of closing_date"},"order_hash":{"type":"string","description":"An identifier for the order"},"protocol_data":{"readOnly":true,"title":"SerializedOrder","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"type":["string","null"],"readOnly":true,"description":"Exchange Contract Address. Typically the address of the Seaport contract."},"current_price":{"type":"string","description":"Current price of the order"},"maker":{"readOnly":true,"description":"The public blockchain address of the order maker.","type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"taker":{"readOnly":true,"description":"The public blockchain address of the order taker.","type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"maker_fees":{"type":"array","items":{"type":"object","properties":{"account":{"readOnly":true,"type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"basis_points":{"type":"string"}},"required":["account","basis_points"]},"readOnly":true},"taker_fees":{"type":"array","items":{"type":"object","properties":{"account":{"readOnly":true,"type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"basis_points":{"type":"string"}},"required":["account","basis_points"]},"readOnly":true},"side":{"type":"string","description":"The side of the order, either bid (offer) or ask(listing)."},"order_type":{"readOnly":true,"enum":["basic","dutch","english","criteria"],"type":"string","description":"* `basic` - basic\n* `dutch` - dutch\n* `english` - english\n* `criteria` - criteria\n\n`basic` `dutch` `english` `criteria`"},"cancelled":{"type":"boolean","description":"If true, the order maker has canceled the order which means it can no longer be filled."},"finalized":{"type":"boolean","description":"If true, the order has already been filled."},"marked_invalid":{"type":"boolean","readOnly":true,"description":"If true, the order is currently invalid and can not be filled."},"remaining_quantity":{"type":"integer","description":"The remaining quantity of the order that has not been filled. This is useful for erc1155 orders."},"relay_id":{"type":"string","readOnly":true,"description":"Deprecated Field"},"criteria_proof":{"type":["array","null"],"items":{"type":"string"},"readOnly":true,"description":"A merkle root composed of the valid set of token identifiers for the order"}},"required":["cancelled","closing_date","created_date","criteria_proof","current_price","expiration_time","finalized","listing_time","maker","maker_fees","marked_invalid","order_hash","order_type","protocol_address","protocol_data","relay_id","remaining_quantity","side","taker","taker_fees"]}},"required":["order"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostOffer = {"body":{"title":"OrderInputWithProtocol","type":"object","properties":{"parameters":{"title":"Order Components","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","description":"Array of items that may be transferred from the offerer's account.","type":"array","items":{"title":"OfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"integer"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"integer"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"integer"}}}},"consideration":{"title":"Consideration","description":"Array of items which must be received by a recipient to fulfill the order. One of the consideration items must be the OpenSea marketplace fee.","type":"array","items":{"title":"ConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"integer"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"integer"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"integer"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"integer"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires.","type":"integer"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","description":"Must match the current counter for the given offerer. If you are unsure of the current counter, it can be [read from the contract](https://etherscan.io/address/0x00000000000000adc04c56bf30ac9d3c0aaf14dc#readContract#F2) on etherscan.","type":"string"}}},"signature":{"title":"Signature","description":"Signature of the signed type data represented by the parameters field.","type":"string"},"protocol_address":{"title":"Protocol Address","description":"Exchange contract address. Must be one of ['0x0000000000000068f116a894984e2db1123eb395']","type":"string"}},"required":["parameters","signature","protocol_address"],"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."},"protocol":{"type":"string","enum":["seaport"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The token settlement protocol to use in the request."}},"required":["chain","protocol"]}]},"response":{"200":{"type":"object","properties":{"order":{"type":"object","description":"OpenSea Order Object","properties":{"created_date":{"type":"string","format":"date-time","description":"Date the order was created"},"closing_date":{"type":"string","format":"date-time","description":"Date the order was closed"},"listing_time":{"type":"integer","readOnly":true,"description":"Timestamp representation of created_date"},"expiration_time":{"type":"integer","readOnly":true,"description":"Timestamp representation of closing_date"},"order_hash":{"type":"string","description":"An identifier for the order"},"protocol_data":{"readOnly":true,"title":"SerializedOrder","type":"object","required":["parameters"],"properties":{"parameters":{"title":"Order","type":"object","required":["offerer","offer","consideration","startTime","endTime","orderType","zone","zoneHash","salt","conduitKey","totalOriginalConsiderationItems","counter"],"properties":{"offerer":{"title":"Offerer","description":"The address which supplies all the items in the offer.","type":"string"},"offer":{"title":"Offer","type":"array","items":{"title":"SerializedOfferItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"}}}},"consideration":{"title":"Consideration","type":"array","items":{"title":"SerializedConsiderationItem","type":"object","required":["itemType","token","identifierOrCriteria","startAmount","endAmount","recipient"],"properties":{"itemType":{"title":"ItemType","description":"0 - Native - Ether (or other native token for the given chain)\n1 - ERC20\n2 - ERC721\n3 - ERC1155\n4 - ERC721 with criteria\n5 - ERC1155 with criteria\n\n`1` `2` `3` `4` `5`","enum":[0,1,2,3,4,5],"type":"integer"},"token":{"title":"Token","description":"The item's token contract (with the null address used for native tokens)","type":"string"},"identifierOrCriteria":{"title":"Identifierorcriteria","description":"The ERC721 or ERC1155 token identifier or, in the case of a criteria-based item type, a merkle root composed of the valid set of token identifiers for the item. This value will be ignored for Ether and ERC20 item types, and can optionally be zero for criteria-based item types to allow for any identifier.","type":"string"},"startAmount":{"title":"Startamount","description":"The amount of the token in question that will be required should the order be fulfilled.","type":"string"},"endAmount":{"title":"Endamount","description":"When endAmount differs from `startAmount`, the realized amount is calculated linearly based on the time elapsed since the order became active.","type":"string"},"recipient":{"title":"Recipient","description":"The address which will receive the consideration item when the order is executed.","type":"string"}}}},"startTime":{"title":"Starttime","description":"The block timestamp at which the order becomes active","type":"string"},"endTime":{"title":"Endtime","description":"The block timestamp at which the order expires","type":"string"},"orderType":{"title":"SeaportOrderType","description":"The type of order, which determines how it can be executed.\n0 = Full Open - No partial fills, anyone can execute\n1 = Partial Open - Partial fills supported, anyone can execute\n2 = Full Restricted - No partial fills, only offerer or zone can check if it can be executed\n3 = Partial Restricted - Partial fills supported, only offerer or zone can check if it can be executed\n4 = Contract - Contract order type, for contract offerers that can dynamically generate orders. Introduced in Seaport v1.4 and currently unsupported\n\n`1` `2` `3` `4`","enum":[0,1,2,3,4],"type":"integer"},"zone":{"title":"Zone","description":"Optional secondary account attached the order which can cancel orders. Additionally, when the `OrderType` is Restricted, the zone or the offerer are the only entities which can execute the order.\nFor open orders, use the zero address.\nFor restricted orders, use the signed zone address 0x000056f7000000ece9003ca63978907a00ffd100","type":"string"},"zoneHash":{"title":"Zonehash","description":"A value that will be supplied to the zone when fulfilling restricted orders that the zone can utilize when making a determination on whether to authorize the order. Most often this value will be the zero hash 0x0000000000000000000000000000000000000000000000000000000000000000","type":"string"},"salt":{"title":"Salt","description":"an arbitrary source of entropy for the order","type":"string"},"conduitKey":{"title":"Conduitkey","description":"Indicates what conduit, if any, should be utilized as a source for token approvals when performing transfers. By default (i.e. when conduitKey is set to the zero hash), the offerer will grant transfer approvals to Seaport directly. \nTo utilize OpenSea's conduit, use 0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000","type":"string"},"totalOriginalConsiderationItems":{"title":"Totaloriginalconsiderationitems","description":"Size of the consideration array.","type":"integer"},"counter":{"title":"Counter","anyOf":[{"type":"integer"},{"type":"string"}]}}},"signature":{"title":"Signature","description":"The order maker's signature used to validate the order.","type":"string"}}},"protocol_address":{"type":["string","null"],"readOnly":true,"description":"Exchange Contract Address. Typically the address of the Seaport contract."},"current_price":{"type":"string","description":"Current price of the order"},"maker":{"readOnly":true,"description":"The public blockchain address of the order maker.","type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"taker":{"readOnly":true,"description":"The public blockchain address of the order taker.","type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"maker_fees":{"type":"array","items":{"type":"object","properties":{"account":{"readOnly":true,"type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"basis_points":{"type":"string"}},"required":["account","basis_points"]},"readOnly":true},"taker_fees":{"type":"array","items":{"type":"object","properties":{"account":{"readOnly":true,"type":"object","required":["address","config","profile_img_url","user"],"properties":{"user":{"type":["integer","null"],"readOnly":true},"profile_img_url":{"type":"string","readOnly":true,"description":"A placeholder image. For the actual profile image, call the Get Account endpoint."},"address":{"type":"string","readOnly":true,"description":"The public blockchain address of the account."},"config":{"readOnly":true,"enum":["affiliate","affiliate_partner","affiliate_requested","affiliate_blacklisted","verified","moderator","staff","employee"],"type":"string","description":"* `affiliate` - affiliate\n* `affiliate_partner` - affiliate_partner\n* `affiliate_requested` - affiliate_requested\n* `affiliate_blacklisted` - affiliate_blacklisted\n* `verified` - verified\n* `moderator` - moderator\n* `staff` - staff\n* `employee` - employee\n\n`affiliate` `affiliate_partner` `affiliate_requested` `affiliate_blacklisted` `verified` `moderator` `staff` `employee`"}}},"basis_points":{"type":"string"}},"required":["account","basis_points"]},"readOnly":true},"side":{"type":"string","description":"The side of the order, either bid (offer) or ask(listing)."},"order_type":{"readOnly":true,"enum":["basic","dutch","english","criteria"],"type":"string","description":"* `basic` - basic\n* `dutch` - dutch\n* `english` - english\n* `criteria` - criteria\n\n`basic` `dutch` `english` `criteria`"},"cancelled":{"type":"boolean","description":"If true, the order maker has canceled the order which means it can no longer be filled."},"finalized":{"type":"boolean","description":"If true, the order has already been filled."},"marked_invalid":{"type":"boolean","readOnly":true,"description":"If true, the order is currently invalid and can not be filled."},"remaining_quantity":{"type":"integer","description":"The remaining quantity of the order that has not been filled. This is useful for erc1155 orders."},"relay_id":{"type":"string","readOnly":true,"description":"Deprecated Field"},"criteria_proof":{"type":["array","null"],"items":{"type":"string"},"readOnly":true,"description":"A merkle root composed of the valid set of token identifiers for the order"}},"required":["cancelled","closing_date","created_date","criteria_proof","current_price","expiration_time","finalized","listing_time","maker","maker_fees","marked_invalid","order_hash","order_type","protocol_address","protocol_data","relay_id","remaining_quantity","side","taker","taker_fees"]}},"required":["order"],"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const RefreshNft = {"metadata":{"allOf":[{"type":"object","properties":{"address":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The public blockchain address."},"chain":{"type":"string","enum":["amoy","arbitrum","arbitrum_nova","arbitrum_sepolia","avalanche","avalanche_fuji","baobab","base","base_sepolia","blast","blast_sepolia","bsc","bsctestnet","ethereum","klaytn","matic","mumbai","optimism","optimism_sepolia","sepolia","solana","soldev","zora","zora_sepolia"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The blockchain on which to filter the results."},"identifier":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The NFT token id."}},"required":["address","chain","identifier"]}]}} as const
;
export { BuildOfferV2, ConnectEmbeddedWallet, GenerateListingFulfillmentDataV2, GenerateOfferFulfillmentDataV2, GetAccount, GetAllListingsOnCollectionV2, GetAllOffersOnCollectionV2, GetBestListingOnNftV2, GetBestListingsOnCollectionV2, GetBestOfferOnNftV2, GetCollection, GetCollectionOffersV2, GetCollectionStats, GetContract, GetEmbeddedWallet, GetListings, GetNft, GetOffers, GetOrder, GetPaymentToken, GetTraitOffersV2, GetTraits, ListCollections, ListEvents, ListEventsByAccount, ListEventsByCollection, ListEventsByNft, ListNftsByAccount, ListNftsByCollection, ListNftsByContract, PostCriteriaOfferV2, PostListing, PostOffer, RefreshNft }
